service: sls

custom:
  settings:
    POSTS_TABLE: posts

plugins:
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  environment: ${self:custom.settings}
  region: us-east-1
  memorySize: 128
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.settings.POSTS_TABLE}"

functions:
  createPost:
    handler: handler.createPost
    events:
      - http:
          path: /post
          method: post
          cors: true
  getPost:
    handler: handler.getPost
    events:
      - http:
          path: /post
          method: get
          cors: true
  updatePost:
    handler: handler.updatePost
    events:
      - http:
          path: /post/{id}
          method: put
          cors: true
deletePost:
  handler: handler.deletePost
  events:
    - http:
        path: /post/{id}
        method: delete
        cors: true

getSinglePost:
  handler: handler.getSinglePost
  events:
    - http:
        path: /post/{id}
        method: get
        cors: true

resources:
  Resources:
    PostsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: "id"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "id"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.settings.POSTS_TABLE}
